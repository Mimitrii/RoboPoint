@startuml
title UC-5: Проверка наличия ингредиентов
actor "Пользователь" as U 
participant  "Приложение" as A 
boundary "Сервис заказа" as S
boundary "Сервис закупок \nи складского \nучета" as OR
dataBase "База данных" as DB 
autonumber "<b>[0]"  

ref over U,A,S,DB
UC-4: Сформировать корзину
end ref

U->A++: Оформить временный заказ
A->S++: Оформить временный заказ
S->S++: Проверить доступность\nингредиентов для заказа
S--
S->DB++: Запрос доступности \nингредиентов
alt Все ингредиенты доступны
DB-->S:Доступно
S->DB: Резервирование \nингредиентов под \nвременный заказ
note left of DB
 Система снимает резерв с ингредиентов 
 установленных временным заказом если 
 пользователь не произвел оплату в течении 30 минут 
end note
DB--
S --> A: Положительный ответ
A --> U: Положительный ответ
A->A++:Перенаправление на целевую страницу
A--

else Ингредиенты отсутствуют на производстве 
DB-->S--:Не доступно
S --> A: Отрицательный 
S -> OR++: Отправить уведомление 
OR -> OR++: Сформировать заказ \nна ингредиенты  
OR--
OR -> DB++: Разместить заказ 
OR--
DB--
S->S++: Скрыть недоступное \nблюдо в меню
S--
S->S++: Удалить \nблюдо из корзины
S--
loop Сформировать 3 доступных блюда из категории недоступного блюда
S->S++: Выбрать блюдо \nна замену
S--
S->DB++: Запрос доступности \nингредиентов
return Доступно
end
S--> A : Предложить замену \nблюда
A --> U : Уведомить об отсутствии \nблюда
A --> U : Предложить замены \nблюда

alt Согласился на предложенную замену
U->A: Добавить блюдо 
A->S: Добавить блюдо во временный заказ
S->S++: Расчитать стоимость заказа
S-->A--:Ответ
A-->U: Отобразить добавления
ref over U,A,S,DB
UC-4: Сформировать корзину
end ref

else Отказался от замены
U->A: Отказался 
A->S: Отказался
S->S++: Расчитать стоимость заказа
S-->A--:Ответ
A-->U: Отобразить изменения

ref over U,A,S,DB
UC-4: Сформировать корзину
end ref
end
end
A--
S--
@enduml
