@startuml
title UC-5: Проверка наличия ингредиентов
actor "Пользователь" as U 
participant  "Приложение" as A 
boundary "Сервис заказа" as S
boundary "Сервис закупок \nи складского \nучета" as OR
dataBase "База данных" as DB 
autonumber "<b>[0]"  

ref over U,A,S,DB
UC-4: Сформировать корзину
end ref

U->A++: Оформить временный заказ
A->S++: Оформить временный заказ
S->S++: Проверить доступность\nингредиентов для заказа
S--
S->DB++: Запрос доступности \nингредиентов
alt Все ингредиенты доступны
DB-->S:Доступно
S->DB: Создание временного заказа
DB-->S:Ответ
S->DB: Резервирование ингредиентов под \nвременный заказ
DB-->S:Ответ
note left of DB
 Система снимает резерв с ингредиентов 
 установленных временным заказом если 
 пользователь не произвел оплату в течении 30 минут 
end note
S --> A: Положительный ответ
A --> U: Положительный ответ
A->A++:Перенаправление на целевую страницу
A--



else Отсутствуют ингредиенты для выбранного блюда
DB-->S:Не доступно
S --> A: Отрицательный 
S -> OR++: Отправить уведомление 
OR -> OR++: Сформировать заказ \nна ингредиенты  
OR--
OR -> DB: Разместить заказ
DB--> OR: Ответ
OR--

S->S++: Скрыть недоступное \nблюдо в меню
S--
S->S++: Удалить \nблюдо из корзины
S--
loop Сформировать 3 доступных \nблюда из категории недоступного блюда
S->S++: Выбрать блюдо \nна замену
S--
S->DB: Запрос доступности \nингредиентов
DB->S: Ответ
end
S--> A : Предложить замену \nблюда
A --> U : Уведомить об отсутствии \nблюда
A --> U : Предложить замены \nблюда

alt Согласился на предложенную замену
U->A: Добавить блюдо 
A->S: Добавить блюдо в корзину
S->S++: Пересчитать стоимость заказа
S-->A--:Ответ
A-->U: Отобразить добавления
ref over U,A,S,DB
UC-4: Сформировать корзину
end ref

else Отказался от замены
U->A: Отказался 
A->S: Отказался
S->S++: Пересчитать стоимость заказа
S-->A--:Ответ
A-->U: Отобразить изменения

end




else Отсутствуют ингредиенты для приготовления нескольких выбранных одинаковых блюд
DB++
DB-->S:доступно в ограниченном количестве
S --> A: Уведомление

S->S++: Пересчет доступного \nколичества блюд в корзине 
S--
loop Сформировать 3 доступных блюда \nиз категории блюд с ограниченным количеством
S->S++: Выбрать блюдо \nна замену
S--
S->DB: Запрос доступности \nингредиентов
DB-->S:Доступно
end
S--> A : Предложить замену \nблюда
A --> U : Уведомить об ограниченном количестве \nвыбранных одинаковых блюд
S--> A : Уменьшить количество \nодинаковых блюд в корзине \nдо доступного количества
A --> U : Предложить замены \nблюда

alt Согласился на предложенную замену
U->A: Добавить блюдо 
A->S: Добавить блюдо в корзину
S->S++: Пересчитать стоимость заказа
S-->A--:Ответ
A-->U: Отобразить добавления
ref over U,A,S,DB
UC-4: Сформировать корзину
end ref

else Отказался от замены
U->A: Отказался 
A->S: Отказался
S->S++: Пересчитать стоимость заказа
S-->A--:Ответ
A-->U: Отобразить изменения
end


end
A--
S--
DB--
@enduml